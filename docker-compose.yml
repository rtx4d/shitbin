version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  dogbin:
    build: .
    restart: always
    environment:
      - SESSION_KEY=${SESSION_KEY}
      - DB_LOCATION=/dogbin.xdb
      - HOST=${HOST}
      - SIMPLEANALYTICS=${SIMPLEANALYTICS}
      - ENABLE_SCREENSHOTTER=false
    volumes:
      - ./dogbin.xdb:/dogbin.xdb
    ports:
      - 127.0.0.1:8890:8890
    expose:
      - 8890
      - 9090
    links:
      - "highlighter:highlighter"
      # - "screenshotter:screenshotter"
      - "iframely:iframely"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8890/ || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
  highlighter:
    build: microservices/highlighter
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  # screenshotter:
  #   build: microservices/screenshotter
  #   image: dogbin/screenshotter
  #   restart: always
  #   environment:
  #     - DOGBIN_HOST=http://dogbin:8080
  #   labels:
  #     - "com.centurylinklabs.watchtower.enable=true"
  iframely:
    image: dogbin/iframely
    restart: always
    environment:
      - PORT=80
      - HOST=iframely.docker.localhost
      - BASE_APP_URL=https://${HOST}
    ports:
      - 127.0.0.1:8893:80
    expose:
      - 80
    volumes:
      - ./iframely.config.js:/iframely/config.local.js
    command: server.js
  autoheal:
    image: willfarrell/autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=10
      - AUTOHEAL_START_PERIOD=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  prometheus:
    image: prom/prometheus
    volumes:
      - ./deployment/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 127.0.0.1:8892:3000
  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
